# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: DatabaseCredentials
  - name: System.debug
    value: true

steps:
- task: UseNode@1
  inputs:
    version: '21.5.0' 
  displayName: 'Use Node.js 21.5.0'

- script: | 
    node -v
  displayName: 'Check Node.js Version'

# - task: Bash@3
#     displayName: 'Create .env file'
#     inputs:
#       targetType: 'inline'
#       script: |
#         echo "Creating .env file from pipeline variables..."
#         echo "POSTGRES_URL=${POSTGRES_URL}" >> .env
#         echo "POSTGRES_PRISMA_URL=${POSTGRES_PRISMA_URL}" >> .env
#         echo "POSTGRES_URL_NO_SSL=${POSTGRES_URL_NO_SSL}" >> .env
#         # Add other environment variables as needed

- script: |
    npm install
  displayName: 'Install dependencies'

- script: |
    npm run build  
  displayName: 'Build Next.js app'

- script: |
    mkdir build_output
    cp -R .next build_output/
    cp -R public build_output/
    cp package.json build_output/
    cp next.config.js build_output/
    cp package-lock.json build_output/
    cp .env build_output/ || true  
    cp next.config.mjs build_output/ || true  
  displayName: 'Prepare build output for artifact'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.SourcesDirectory)/build_output'
    artifactName: 'nextjs-build'
    publishLocation: 'Container'

- task: Npm@1
  displayName: npm run test
  inputs:
    command: 'custom'
    workingDir: './'
    customCommand: 'run test:ci'

- task: PublishTestResults@2
  displayName: 'Publish test results'
  inputs:
    testResultsFiles: '**/junit.xml'
  condition: succeededOrFailed()

# - task: AzureWebApp@1
#   inputs:
#     azureSubscription: '<your-azure-service-connection>'
#     appName: 'nextjs-web-app'
#     package: '$(Build.ArtifactStagingDirectory)/nextjs-build'
